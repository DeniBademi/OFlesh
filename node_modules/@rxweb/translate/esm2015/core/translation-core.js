import { getKeyName } from "../functions/get-key-name";
import { MultiLingualData } from "./multilingual-data";
import { Subject } from 'rxjs';
export const TranslationCore = new (class {
    constructor() {
        this.languageChangedSubject = new Subject();
        this.languageChanged = this.languageChangedSubject.asObservable();
    }
    getText(path) {
        let splitText = path.split('.');
        let keyName = getKeyName(splitText[0]);
        let data = MultiLingualData.get(keyName);
        let text = '';
        if (data) {
            splitText.splice(0, 1);
            for (var col of splitText)
                text = text ? text[col] : data[col];
        }
        return text;
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb24tY29yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RyYW5zbGF0ZS9jb3JlL3RyYW5zbGF0aW9uLWNvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBYyxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFM0MsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUtwQixJQUFJLENBQUM7SUFBQTtRQUNMLDJCQUFzQixHQUFxQixJQUFJLE9BQU8sRUFBVyxDQUFDO1FBQ2xFLG9CQUFlLEdBQXdCLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQWN0RixDQUFDO0lBWkcsT0FBTyxDQUFDLElBQVk7UUFDaEIsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQyxJQUFJLE9BQU8sR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsSUFBSSxJQUFJLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3pDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUNkLElBQUksSUFBSSxFQUFFO1lBQ04sU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDdkIsS0FBSyxJQUFJLEdBQUcsSUFBSSxTQUFTO2dCQUNyQixJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUMzQztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRLZXlOYW1lIH0gZnJvbSBcIi4uL2Z1bmN0aW9ucy9nZXQta2V5LW5hbWVcIjtcclxuaW1wb3J0IHsgTXVsdGlMaW5ndWFsRGF0YSB9IGZyb20gXCIuL211bHRpbGluZ3VhbC1kYXRhXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuXHJcbmV4cG9ydCBjb25zdCBUcmFuc2xhdGlvbkNvcmU6XHJcbiAgICB7XHJcbiAgICAgICAgbGFuZ3VhZ2VDaGFuZ2VkU3ViamVjdDogU3ViamVjdDxib29sZWFuPjtcclxuICAgICAgICBsYW5ndWFnZUNoYW5nZWQ6IE9ic2VydmFibGU8Ym9vbGVhbj47XHJcbiAgICAgICAgZ2V0VGV4dChwYXRoOiBzdHJpbmcpO1xyXG4gICAgfSA9IG5ldyAoY2xhc3Mge1xyXG4gICAgICAgIGxhbmd1YWdlQ2hhbmdlZFN1YmplY3Q6IFN1YmplY3Q8Ym9vbGVhbj4gPSBuZXcgU3ViamVjdDxib29sZWFuPigpO1xyXG4gICAgICAgIGxhbmd1YWdlQ2hhbmdlZDogT2JzZXJ2YWJsZTxib29sZWFuPiA9IHRoaXMubGFuZ3VhZ2VDaGFuZ2VkU3ViamVjdC5hc09ic2VydmFibGUoKTtcclxuXHJcbiAgICAgICAgZ2V0VGV4dChwYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICAgICAgbGV0IHNwbGl0VGV4dCA9IHBhdGguc3BsaXQoJy4nKTtcclxuICAgICAgICAgICAgbGV0IGtleU5hbWUgPSBnZXRLZXlOYW1lKHNwbGl0VGV4dFswXSk7XHJcbiAgICAgICAgICAgIGxldCBkYXRhID0gTXVsdGlMaW5ndWFsRGF0YS5nZXQoa2V5TmFtZSk7XHJcbiAgICAgICAgICAgIGxldCB0ZXh0ID0gJyc7XHJcbiAgICAgICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBzcGxpdFRleHQuc3BsaWNlKDAsIDEpO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgY29sIG9mIHNwbGl0VGV4dClcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0ID0gdGV4dCA/IHRleHRbY29sXSA6IGRhdGFbY29sXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gdGV4dDtcclxuICAgICAgICB9XHJcbiAgICB9KTsiXX0=