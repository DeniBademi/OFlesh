import { LocalizeParser } from '@gilsdav/ngx-translate-router';
export class LocalizeRouterHttpLoader extends LocalizeParser {
    /**
     * CTOR
     * @param translate
     * @param location
     * @param settings
     * @param http
     * @param path
     */
    constructor(translate, location, settings, http, path = 'assets/locales.json') {
        super(translate, location, settings);
        this.http = http;
        this.path = path;
    }
    /**
     * Initialize or append routes
     * @param routes
     */
    load(routes) {
        return new Promise((resolve) => {
            this.http.get(`${this.path}`)
                .subscribe((data) => {
                this.locales = data.locales;
                this.prefix = data.prefix || '';
                this.escapePrefix = data.escapePrefix || '';
                this.init(routes).then(resolve);
            });
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC1sb2FkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtdHJhbnNsYXRlLXJvdXRlci1odHRwLWxvYWRlci9zcmMvbGliL2h0dHAtbG9hZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQTBCLE1BQU0sK0JBQStCLENBQUM7QUFldkYsTUFBTSxPQUFPLHdCQUF5QixTQUFRLGNBQWM7SUFDMUQ7Ozs7Ozs7T0FPRztJQUNILFlBQ0UsU0FBMkIsRUFDM0IsUUFBa0IsRUFDbEIsUUFBZ0MsRUFDeEIsSUFBZ0IsRUFDaEIsT0FBZSxxQkFBcUI7UUFFNUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFIN0IsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUNoQixTQUFJLEdBQUosSUFBSSxDQUFnQztJQUc5QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFBSSxDQUFDLE1BQWM7UUFDakIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQVksRUFBRSxFQUFFO1lBQ2xDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO2lCQUMxQixTQUFTLENBQUMsQ0FBQyxJQUFpQyxFQUFFLEVBQUU7Z0JBQy9DLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFDNUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxJQUFJLEVBQUUsQ0FBQztnQkFDNUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDbEMsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvY2FsaXplUGFyc2VyLCBMb2NhbGl6ZVJvdXRlclNldHRpbmdzIH0gZnJvbSAnQGdpbHNkYXYvbmd4LXRyYW5zbGF0ZS1yb3V0ZXInO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IFJvdXRlcyB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBMb2NhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbi8qKlxuICogQ29uZmlnIGludGVyZmFjZVxuICovXG5leHBvcnQgaW50ZXJmYWNlIElMb2NhbGl6ZVJvdXRlclBhcnNlckNvbmZpZyB7XG4gIGxvY2FsZXM6IEFycmF5PHN0cmluZz47XG4gIHByZWZpeD86IHN0cmluZztcbiAgZXNjYXBlUHJlZml4Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgTG9jYWxpemVSb3V0ZXJIdHRwTG9hZGVyIGV4dGVuZHMgTG9jYWxpemVQYXJzZXIge1xuICAvKipcbiAgICogQ1RPUlxuICAgKiBAcGFyYW0gdHJhbnNsYXRlXG4gICAqIEBwYXJhbSBsb2NhdGlvblxuICAgKiBAcGFyYW0gc2V0dGluZ3NcbiAgICogQHBhcmFtIGh0dHBcbiAgICogQHBhcmFtIHBhdGhcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHRyYW5zbGF0ZTogVHJhbnNsYXRlU2VydmljZSxcbiAgICBsb2NhdGlvbjogTG9jYXRpb24sXG4gICAgc2V0dGluZ3M6IExvY2FsaXplUm91dGVyU2V0dGluZ3MsXG4gICAgcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LFxuICAgIHByaXZhdGUgcGF0aDogc3RyaW5nID0gJ2Fzc2V0cy9sb2NhbGVzLmpzb24nXG4gICAgKSB7XG4gICAgc3VwZXIodHJhbnNsYXRlLCBsb2NhdGlvbiwgc2V0dGluZ3MpO1xuICB9XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemUgb3IgYXBwZW5kIHJvdXRlc1xuICAgKiBAcGFyYW0gcm91dGVzXG4gICAqL1xuICBsb2FkKHJvdXRlczogUm91dGVzKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmU6IGFueSkgPT4ge1xuICAgICAgdGhpcy5odHRwLmdldChgJHt0aGlzLnBhdGh9YClcbiAgICAgICAgLnN1YnNjcmliZSgoZGF0YTogSUxvY2FsaXplUm91dGVyUGFyc2VyQ29uZmlnKSA9PiB7XG4gICAgICAgICAgdGhpcy5sb2NhbGVzID0gZGF0YS5sb2NhbGVzO1xuICAgICAgICAgIHRoaXMucHJlZml4ID0gZGF0YS5wcmVmaXggfHwgJyc7XG4gICAgICAgICAgdGhpcy5lc2NhcGVQcmVmaXggPSBkYXRhLmVzY2FwZVByZWZpeCB8fCAnJztcbiAgICAgICAgICB0aGlzLmluaXQocm91dGVzKS50aGVuKHJlc29sdmUpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIl19