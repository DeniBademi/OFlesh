"use strict";
/* TODO: update @typescript-eslint to fix "Parsing error: Cannot read property 'map' of undefined" when using following types */
// type TrackEvent = [string, string, object]
// type TrackRecentItem = [string, object]
// type IdentifyCustomer = [string, KlaviyoIdentify]
Object.defineProperty(exports, "__esModule", { value: true });
exports.trackAddedToCart = exports.trackVisitedProduct = exports.trackRecentlyViewedItem = exports.identifyUser = exports.trackEvent = void 0;
function trackEvent(eventName, eventData) {
    window._learnq = window._learnq || [];
    return window._learnq.push(['track', eventName, eventData]);
}
exports.trackEvent = trackEvent;
function identifyUser(userData) {
    window._learnq = window._learnq || [];
    return window._learnq.push(['identify', userData]);
}
exports.identifyUser = identifyUser;
function trackRecentlyViewedItem(product) {
    /* shape of recentItem is taken from Klaviyo docs: https://help.klaviyo.com/hc/en-us/articles/360019921772-How-to-Insert-Recently-Viewed-Items-into-an-Email */
    const recentItem = {
        Title: product.Name,
        ItemId: product.ProductID,
        Categories: product.Categories,
        ImageUrl: product.ImageURL,
        Url: product.URL,
        Metadata: {
            Brand: product.Brand,
            Price: product.Price,
            CompareAtPrice: product.CompareAtPrice,
        },
    };
    window._learnq = window._learnq || [];
    return window._learnq.push(['trackViewedItem', recentItem]);
}
exports.trackRecentlyViewedItem = trackRecentlyViewedItem;
function trackVisitedProduct(product) {
    trackEvent('Viewed Product', product);
    trackRecentlyViewedItem(product);
}
exports.trackVisitedProduct = trackVisitedProduct;
function trackAddedToCart(product) {
    return trackEvent('Added to Cart', product);
}
exports.trackAddedToCart = trackAddedToCart;
