import * as i0 from '@angular/core';
import { Injectable, Component, Input, Output, EventEmitter, NgModule } from '@angular/core';
import { lcOnInit, assignEventHandlers, lcOnDestroy, getData, createWidget } from '@livechat/widget-core';
import { BehaviorSubject } from 'rxjs';

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var WidgetIsReadyService = /*#__PURE__*/function () {
  function WidgetIsReadyService(zone) {
    var _this = this;

    _classCallCheck(this, WidgetIsReadyService);

    _defineProperty(this, "zone", void 0);

    _defineProperty(this, "onDestroy", void 0);

    _defineProperty(this, "subject", new BehaviorSubject(false));

    this.zone = zone;

    var onReady = function onReady() {
      return _this.setIsReady(true);
    };

    var unsubscribeInit = lcOnInit(function () {
      assignEventHandlers('once', {
        onReady: onReady
      });
    });
    var unsubscribeDestroy = lcOnDestroy(function () {
      setTimeout(function () {
        return _this.setIsReady(false);
      }, 0);
    });

    this.onDestroy = function () {
      _this.subject.complete();

      _this.subject.unsubscribe();

      assignEventHandlers('off', {
        onReady: onReady
      });
      unsubscribeInit();
      unsubscribeDestroy();
    };
  }

  _createClass(WidgetIsReadyService, [{
    key: "setIsReady",
    value: function setIsReady(isReady) {
      var _this2 = this;

      this.zone.run(function () {
        _this2.subject.next(isReady);
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.onDestroy();
    }
  }]);

  return WidgetIsReadyService;
}();

_defineProperty(WidgetIsReadyService, "\u0275fac", function WidgetIsReadyService_Factory(t) {
  return new (t || WidgetIsReadyService)(i0.ɵɵinject(i0.NgZone));
});

_defineProperty(WidgetIsReadyService, "\u0275prov", /*@__PURE__*/i0.ɵɵdefineInjectable({
  token: WidgetIsReadyService,
  factory: WidgetIsReadyService.ɵfac
}));

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(WidgetIsReadyService, [{
    type: Injectable
  }], function () {
    return [{
      type: i0.NgZone
    }];
  }, null);
})();

var WidgetStateService = /*#__PURE__*/function () {
  function WidgetStateService(zone) {
    var _this = this;

    _classCallCheck(this, WidgetStateService);

    _defineProperty(this, "zone", void 0);

    _defineProperty(this, "onDestroy", void 0);

    _defineProperty(this, "subject", new BehaviorSubject(null));

    this.zone = zone;

    var onReady = function onReady(_ref) {
      var state = _ref.state;
      return _this.setWidgetState(state);
    };

    var onVisibilityChanged = function onVisibilityChanged(_ref2) {
      var visibility = _ref2.visibility;

      var prevValue = _this.subject.getValue();

      _this.setWidgetState(prevValue ? _objectSpread2(_objectSpread2({}, prevValue), {}, {
        visibility: visibility
      }) : prevValue);
    };

    var onAvailabilityChanged = function onAvailabilityChanged(_ref3) {
      var availability = _ref3.availability;

      var prevValue = _this.subject.getValue();

      _this.setWidgetState(prevValue ? _objectSpread2(_objectSpread2({}, prevValue), {}, {
        availability: availability
      }) : prevValue);
    };

    var unsubscribeInit = lcOnInit(function () {
      assignEventHandlers('once', {
        onReady: onReady
      });
      assignEventHandlers('on', {
        onVisibilityChanged: onVisibilityChanged,
        onAvailabilityChanged: onAvailabilityChanged
      });
    });
    var unsubscribeDestroy = lcOnDestroy(function () {
      setTimeout(function () {
        return _this.setWidgetState(null);
      }, 0);
    });

    this.onDestroy = function () {
      _this.subject.complete();

      _this.subject.unsubscribe();

      assignEventHandlers('off', {
        onReady: onReady,
        onVisibilityChanged: onVisibilityChanged,
        onAvailabilityChanged: onAvailabilityChanged
      });
      unsubscribeInit();
      unsubscribeDestroy();
    };
  }

  _createClass(WidgetStateService, [{
    key: "setWidgetState",
    value: function setWidgetState(widgetState) {
      var _this2 = this;

      this.zone.run(function () {
        _this2.subject.next(widgetState);
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.onDestroy();
    }
  }]);

  return WidgetStateService;
}();

_defineProperty(WidgetStateService, "\u0275fac", function WidgetStateService_Factory(t) {
  return new (t || WidgetStateService)(i0.ɵɵinject(i0.NgZone));
});

_defineProperty(WidgetStateService, "\u0275prov", /*@__PURE__*/i0.ɵɵdefineInjectable({
  token: WidgetStateService,
  factory: WidgetStateService.ɵfac
}));

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(WidgetStateService, [{
    type: Injectable
  }], function () {
    return [{
      type: i0.NgZone
    }];
  }, null);
})();

var WidgetCustomerDataService = /*#__PURE__*/function () {
  function WidgetCustomerDataService(zone) {
    var _this = this;

    _classCallCheck(this, WidgetCustomerDataService);

    _defineProperty(this, "zone", void 0);

    _defineProperty(this, "onDestroy", void 0);

    _defineProperty(this, "subject", new BehaviorSubject(null));

    this.zone = zone;

    var onReady = function onReady(_ref) {
      var customerData = _ref.customerData;
      return _this.setCustomerData(customerData);
    };

    var onCustomerStatusChanged = function onCustomerStatusChanged() {
      return _this.setCustomerData(getData('customer'));
    };

    var unsubscribeInit = lcOnInit(function () {
      assignEventHandlers('once', {
        onReady: onReady
      });
      assignEventHandlers('on', {
        onCustomerStatusChanged: onCustomerStatusChanged
      });
    });
    var unsubscribeDestroy = lcOnDestroy(function () {
      setTimeout(function () {
        return _this.setCustomerData(null);
      }, 0);
    });

    this.onDestroy = function () {
      _this.subject.complete();

      _this.subject.unsubscribe();

      assignEventHandlers('off', {
        onReady: onReady,
        onCustomerStatusChanged: onCustomerStatusChanged
      });
      unsubscribeInit();
      unsubscribeDestroy();
    };
  }

  _createClass(WidgetCustomerDataService, [{
    key: "setCustomerData",
    value: function setCustomerData(data) {
      var _this2 = this;

      this.zone.run(function () {
        return _this2.subject.next(data);
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.onDestroy();
    }
  }]);

  return WidgetCustomerDataService;
}();

_defineProperty(WidgetCustomerDataService, "\u0275fac", function WidgetCustomerDataService_Factory(t) {
  return new (t || WidgetCustomerDataService)(i0.ɵɵinject(i0.NgZone));
});

_defineProperty(WidgetCustomerDataService, "\u0275prov", /*@__PURE__*/i0.ɵɵdefineInjectable({
  token: WidgetCustomerDataService,
  factory: WidgetCustomerDataService.ɵfac
}));

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(WidgetCustomerDataService, [{
    type: Injectable
  }], function () {
    return [{
      type: i0.NgZone
    }];
  }, null);
})();

var WidgetChatDataService = /*#__PURE__*/function () {
  function WidgetChatDataService(zone, widgetCustomerDataService) {
    var _this = this;

    _classCallCheck(this, WidgetChatDataService);

    _defineProperty(this, "zone", void 0);

    _defineProperty(this, "onDestroy", void 0);

    _defineProperty(this, "subject", new BehaviorSubject(null));

    this.zone = zone;
    var subscribtion = widgetCustomerDataService.subject.subscribe(function (customerData) {
      var status = customerData === null || customerData === void 0 ? void 0 : customerData.status;

      if (status === 'chatting') {
        _this.setChatData(getData('chat'));
      } else {
        _this.setChatData(null);
      }
    });

    this.onDestroy = function () {
      _this.subject.complete();

      _this.subject.unsubscribe();

      subscribtion.unsubscribe();
    };
  }

  _createClass(WidgetChatDataService, [{
    key: "setChatData",
    value: function setChatData(data) {
      var _this2 = this;

      this.zone.run(function () {
        _this2.subject.next(data);
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.onDestroy();
    }
  }]);

  return WidgetChatDataService;
}();

_defineProperty(WidgetChatDataService, "\u0275fac", function WidgetChatDataService_Factory(t) {
  return new (t || WidgetChatDataService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(WidgetCustomerDataService));
});

_defineProperty(WidgetChatDataService, "\u0275prov", /*@__PURE__*/i0.ɵɵdefineInjectable({
  token: WidgetChatDataService,
  factory: WidgetChatDataService.ɵfac
}));

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(WidgetChatDataService, [{
    type: Injectable
  }], function () {
    return [{
      type: i0.NgZone
    }, {
      type: WidgetCustomerDataService
    }];
  }, null);
})();

var WidgetGreetingService = /*#__PURE__*/function () {
  function WidgetGreetingService(zone) {
    var _this = this;

    _classCallCheck(this, WidgetGreetingService);

    _defineProperty(this, "zone", void 0);

    _defineProperty(this, "onDestroy", void 0);

    _defineProperty(this, "subject", new BehaviorSubject(null));

    this.zone = zone;

    var onGreetingDisplayed = function onGreetingDisplayed(greeting) {
      return _this.setGreeting(greeting);
    };

    var onGreetingHidden = function onGreetingHidden() {
      return _this.setGreeting(null);
    };

    var unsubscribeInit = lcOnInit(function () {
      assignEventHandlers('on', {
        onGreetingDisplayed: onGreetingDisplayed,
        onGreetingHidden: onGreetingHidden
      });
    });
    var unsubscribeDestroy = lcOnDestroy(function () {
      setTimeout(function () {
        return _this.setGreeting(null);
      }, 0);
    });

    this.onDestroy = function () {
      _this.subject.complete();

      _this.subject.unsubscribe();

      assignEventHandlers('off', {
        onGreetingDisplayed: onGreetingDisplayed,
        onGreetingHidden: onGreetingHidden
      });
      unsubscribeInit();
      unsubscribeDestroy();
    };
  }

  _createClass(WidgetGreetingService, [{
    key: "setGreeting",
    value: function setGreeting(greeting) {
      var _this2 = this;

      this.zone.run(function () {
        _this2.subject.next(greeting);
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.onDestroy();
    }
  }]);

  return WidgetGreetingService;
}();

_defineProperty(WidgetGreetingService, "\u0275fac", function WidgetGreetingService_Factory(t) {
  return new (t || WidgetGreetingService)(i0.ɵɵinject(i0.NgZone));
});

_defineProperty(WidgetGreetingService, "\u0275prov", /*@__PURE__*/i0.ɵɵdefineInjectable({
  token: WidgetGreetingService,
  factory: WidgetGreetingService.ɵfac
}));

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(WidgetGreetingService, [{
    type: Injectable
  }], function () {
    return [{
      type: i0.NgZone
    }];
  }, null);
})();

var LiveChatWidgetComponent = /*#__PURE__*/function () {
  function LiveChatWidgetComponent() {
    _classCallCheck(this, LiveChatWidgetComponent);

    _defineProperty(this, "license", '');

    _defineProperty(this, "group", void 0);

    _defineProperty(this, "visibility", void 0);

    _defineProperty(this, "customerName", void 0);

    _defineProperty(this, "customerEmail", void 0);

    _defineProperty(this, "sessionVariables", void 0);

    _defineProperty(this, "chatBetweenGroups", void 0);

    _defineProperty(this, "customIdentityProvider", void 0);

    _defineProperty(this, "onReady", new EventEmitter());

    _defineProperty(this, "onNewEvent", new EventEmitter());

    _defineProperty(this, "onFormSubmitted", new EventEmitter());

    _defineProperty(this, "onRatingSubmitted", new EventEmitter());

    _defineProperty(this, "onGreetingHidden", new EventEmitter());

    _defineProperty(this, "onGreetingDisplayed", new EventEmitter());

    _defineProperty(this, "onVisibilityChanged", new EventEmitter());

    _defineProperty(this, "onCustomerStatusChanged", new EventEmitter());

    _defineProperty(this, "onRichMessageButtonClicked", new EventEmitter());

    _defineProperty(this, "onAvailabilityChanged", new EventEmitter());

    _defineProperty(this, "widget", null);
  }

  _createClass(LiveChatWidgetComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      this.setupWidget();
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var fullReloadProps = ['license', 'group', 'chatBetweenGroups'];

      if (fullReloadProps.some(function (prop) {
        var _changes$prop;

        return changes[prop] !== undefined && !((_changes$prop = changes[prop]) !== null && _changes$prop !== void 0 && _changes$prop.isFirstChange());
      })) {
        this.reinitialize();
        return;
      }

      if (changes.visibility !== undefined && !changes.visibility.isFirstChange()) {
        var _this$widget;

        (_this$widget = this.widget) === null || _this$widget === void 0 ? void 0 : _this$widget.updateVisibility(changes.visibility.currentValue);
      }

      if (changes.customerName !== undefined && !changes.customerName.isFirstChange()) {
        var _this$widget2;

        (_this$widget2 = this.widget) === null || _this$widget2 === void 0 ? void 0 : _this$widget2.updateCustomerData({
          name: changes.customerName.currentValue
        });
      }

      if (changes.customerEmail !== undefined && !changes.customerEmail.isFirstChange()) {
        var _this$widget3;

        (_this$widget3 = this.widget) === null || _this$widget3 === void 0 ? void 0 : _this$widget3.updateCustomerData({
          email: changes.customerEmail.currentValue
        });
      }

      if (changes.sessionVariables !== undefined && !changes.sessionVariables.isFirstChange()) {
        var _this$widget4;

        (_this$widget4 = this.widget) === null || _this$widget4 === void 0 ? void 0 : _this$widget4.updateSessionVariables(changes.sessionVariables.currentValue);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var _this$widget5;

      (_this$widget5 = this.widget) === null || _this$widget5 === void 0 ? void 0 : _this$widget5.destroy();
    }
  }, {
    key: "setupWidget",
    value: function setupWidget() {
      var _this = this;

      this.widget = createWidget({
        group: this.group,
        license: this.license,
        visibility: this.visibility,
        customerName: this.customerName,
        customerEmail: this.customerEmail,
        sessionVariables: this.sessionVariables,
        chatBetweenGroups: this.chatBetweenGroups,
        customIdentityProvider: this.customIdentityProvider,
        onReady: function onReady(data) {
          return _this.onReady.emit(data);
        },
        onNewEvent: function onNewEvent(event) {
          return _this.onNewEvent.emit(event);
        },
        onFormSubmitted: function onFormSubmitted(form) {
          return _this.onFormSubmitted.emit(form);
        },
        onRatingSubmitted: function onRatingSubmitted(rating) {
          return _this.onRatingSubmitted.emit(rating);
        },
        onGreetingHidden: function onGreetingHidden(greeting) {
          return _this.onGreetingHidden.emit(greeting);
        },
        onGreetingDisplayed: function onGreetingDisplayed(greeting) {
          return _this.onGreetingDisplayed.emit(greeting);
        },
        onVisibilityChanged: function onVisibilityChanged(visibility) {
          return _this.onVisibilityChanged.emit(visibility);
        },
        onCustomerStatusChanged: function onCustomerStatusChanged(status) {
          return _this.onCustomerStatusChanged.emit(status);
        },
        onRichMessageButtonClicked: function onRichMessageButtonClicked(button) {
          return _this.onRichMessageButtonClicked.emit(button);
        },
        onAvailabilityChanged: function onAvailabilityChanged(availability) {
          return _this.onAvailabilityChanged.emit(availability);
        }
      });
      window.__lc.integration_name = "@livechat/widget-angular";
      this.widget.init();
    }
  }, {
    key: "reinitialize",
    value: function reinitialize() {
      var _this$widget6;

      (_this$widget6 = this.widget) === null || _this$widget6 === void 0 ? void 0 : _this$widget6.destroy();
      this.setupWidget();
    }
  }]);

  return LiveChatWidgetComponent;
}();

_defineProperty(LiveChatWidgetComponent, "\u0275fac", function LiveChatWidgetComponent_Factory(t) {
  return new (t || LiveChatWidgetComponent)();
});

_defineProperty(LiveChatWidgetComponent, "\u0275cmp", /*@__PURE__*/i0.ɵɵdefineComponent({
  type: LiveChatWidgetComponent,
  selectors: [["livechat-widget"]],
  inputs: {
    license: "license",
    group: "group",
    visibility: "visibility",
    customerName: "customerName",
    customerEmail: "customerEmail",
    sessionVariables: "sessionVariables",
    chatBetweenGroups: "chatBetweenGroups",
    customIdentityProvider: "customIdentityProvider"
  },
  outputs: {
    onReady: "onReady",
    onNewEvent: "onNewEvent",
    onFormSubmitted: "onFormSubmitted",
    onRatingSubmitted: "onRatingSubmitted",
    onGreetingHidden: "onGreetingHidden",
    onGreetingDisplayed: "onGreetingDisplayed",
    onVisibilityChanged: "onVisibilityChanged",
    onCustomerStatusChanged: "onCustomerStatusChanged",
    onRichMessageButtonClicked: "onRichMessageButtonClicked",
    onAvailabilityChanged: "onAvailabilityChanged"
  },
  features: [i0.ɵɵNgOnChangesFeature],
  decls: 0,
  vars: 0,
  template: function LiveChatWidgetComponent_Template(rf, ctx) {},
  encapsulation: 2
}));

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(LiveChatWidgetComponent, [{
    type: Component,
    args: [{
      selector: 'livechat-widget',
      template: '',
      styles: []
    }]
  }], null, {
    license: [{
      type: Input
    }],
    group: [{
      type: Input
    }],
    visibility: [{
      type: Input
    }],
    customerName: [{
      type: Input
    }],
    customerEmail: [{
      type: Input
    }],
    sessionVariables: [{
      type: Input
    }],
    chatBetweenGroups: [{
      type: Input
    }],
    customIdentityProvider: [{
      type: Input
    }],
    onReady: [{
      type: Output
    }],
    onNewEvent: [{
      type: Output
    }],
    onFormSubmitted: [{
      type: Output
    }],
    onRatingSubmitted: [{
      type: Output
    }],
    onGreetingHidden: [{
      type: Output
    }],
    onGreetingDisplayed: [{
      type: Output
    }],
    onVisibilityChanged: [{
      type: Output
    }],
    onCustomerStatusChanged: [{
      type: Output
    }],
    onRichMessageButtonClicked: [{
      type: Output
    }],
    onAvailabilityChanged: [{
      type: Output
    }]
  });
})();

var LiveChatWidgetModule = /*#__PURE__*/_createClass(function LiveChatWidgetModule() {
  _classCallCheck(this, LiveChatWidgetModule);
});

_defineProperty(LiveChatWidgetModule, "\u0275fac", function LiveChatWidgetModule_Factory(t) {
  return new (t || LiveChatWidgetModule)();
});

_defineProperty(LiveChatWidgetModule, "\u0275mod", /*@__PURE__*/i0.ɵɵdefineNgModule({
  type: LiveChatWidgetModule
}));

_defineProperty(LiveChatWidgetModule, "\u0275inj", /*@__PURE__*/i0.ɵɵdefineInjector({
  providers: [WidgetIsReadyService, WidgetStateService, WidgetCustomerDataService, WidgetChatDataService, WidgetGreetingService],
  imports: [[]]
}));

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(LiveChatWidgetModule, [{
    type: NgModule,
    args: [{
      imports: [],
      declarations: [LiveChatWidgetComponent],
      exports: [LiveChatWidgetComponent],
      providers: [WidgetIsReadyService, WidgetStateService, WidgetCustomerDataService, WidgetChatDataService, WidgetGreetingService]
    }]
  }], null, null);
})();

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(LiveChatWidgetModule, {
    declarations: [LiveChatWidgetComponent],
    exports: [LiveChatWidgetComponent]
  });
})();

export { LiveChatWidgetComponent, LiveChatWidgetModule, WidgetChatDataService, WidgetCustomerDataService, WidgetGreetingService, WidgetIsReadyService, WidgetStateService };
